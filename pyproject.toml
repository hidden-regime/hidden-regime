[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "hidden-regime"
dynamic = ["version"]
authors = [
    {name = "aoaustin", email = "contact@hiddenregime.com"},
]
description = "Market regime detection using Hidden Markov Models with Bayesian uncertainty quantification"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Office/Business :: Financial :: Investment", 
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Natural Language :: English",
    "Environment :: Console",
    "Typing :: Typed",
]
keywords = [
    "finance",
    "trading", 
    "regimes",
    "hmm",
    "hidden-markov-models",
    "bayesian",
    "machine-learning",
    "market-data",
    "quantitative-finance",
    "algorithmic-trading",
    "financial-analysis",
    "time-series",
    "regime-detection",
    "volatility",
    "risk-management",
]
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0", 
    "matplotlib>=3.4.0",
    "yfinance>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "psutil>=5.8.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "bandit[toml]>=1.7.0",
    "tox>=4.0.0",
    "build>=0.8.0",
    "twine>=4.0.0",
]
ml = [
    "scikit-learn>=1.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0", 
    "sphinx-autodoc-typehints>=1.12.0",
]
all = [
    "hidden-regime[dev,ml,docs]",
]

[project.urls]
Homepage = "https://hiddenregime.com"
Documentation = "https://docs.hiddenregime.com"
Repository = "https://github.com/hidden-regime/hidden-regime"
Issues = "https://github.com/hidden-regime/hidden-regime/issues"
Changelog = "https://github.com/hidden-regime/hidden-regime/blob/main/CHANGELOG.md"
"Source Code" = "https://github.com/hidden-regime/hidden-regime"
"Bug Reports" = "https://github.com/hidden-regime/hidden-regime/issues"
"Feature Requests" = "https://github.com/hidden-regime/hidden-regime/issues"

[project.scripts]
hidden-regime = "hidden_regime.cli:main"

[tool.setuptools]
packages = ["hidden_regime", "hidden_regime.config", "hidden_regime.data", "hidden_regime.models", "hidden_regime.utils", "hidden_regime.visualization"]
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "hidden_regime._version.__version__"}

[tool.setuptools.package-data]
hidden_regime = ["py.typed", "*.pyi"]

[tool.setuptools_scm]
write_to = "hidden_regime/_version.py"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true 
ensure_newline_before_comments = true
line_length = 88
src_paths = ["hidden_regime", "tests", "examples"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_column_numbers = true
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "matplotlib.*",
    "sklearn.*",
]
ignore_missing_imports = true

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

# Coverage configuration  
[tool.coverage.run]
source = ["hidden_regime"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*", 
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError", 
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--tb=short",
    "--color=yes",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (slower, requires components)",
    "performance: Performance and benchmark tests (slow)",
    "slow: Slow running tests",
    "network: Tests that require network access",
    "models: Tests related to HMM models",
    "data: Tests related to data loading and processing",
    "asyncio: Asynchronous tests requiring asyncio support",
]
filterwarnings = [
    "ignore::UserWarning:yfinance.*",
    "ignore::FutureWarning:pandas.*",
    "ignore::DeprecationWarning:matplotlib.*",
]